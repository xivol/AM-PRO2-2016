//
// Лабораторная работа №13. Динамические структуры данных. Списки
// tlist.h
//
#pragma once

// Узел списка:
//     tlist::datatype - тип данных списка;
//     data - значение в узле списка;
//     next - указатель на следующий элемент.
struct tlist
{
    typedef int datatype;
    datatype data;
    tlist *next;
};

// Функция создания списка.
// Данные вводятся с конслои.
// Входные параметры:
//     length - количество элементов списка.
// Возвращает указатель на первый элемент списка.
tlist *get_list(const size_t length);

// Функция создания списка.
// Данные вводятся из файла.
// Входные параметры:
//     filename - имя файла данных.
// Возвращает указатель на первый элемент списка.
// В случае, если не удаётся получить доступ к файлу
// выбрасывает исключение char*.
tlist *get_list(const char *filename);

// Функция удаления списка.
// Входные параметры:
//     begin - указатель на начало списка.
// Выходное значение параметра begin равно nullptr.
void delete_list(tlist *&begin);

// Функция вывода списка на консоль.
// Входные параметры:
//     begin - указатель на начало списка.
void print_list(const tlist *begin);

// Функция поиска элемента.
// Входные параметры:
//     begin - указатель на начало списка;
//     x - искомое значение.
// Возвращает указатель на первый элемент с заданным значением или
// nullptr, если элемента с таким значение в списке нет.
tlist *find(const tlist *begin, const tlist::datatype x);